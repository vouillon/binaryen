name: Windows CI
on:
  push:
env:
  OPAMROOT: D:\opamroot
  OPAMSOLVERTIMEOUT: 120
jobs:
  build:
    strategy:
      matrix:
        os:
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout tree
        uses: actions/checkout@v4

      - name: Download install.ps1
        run: |
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          (New-Object System.Net.WebClient).DownloadFile("https://raw.githubusercontent.com/ocaml/opam/master/shell/install.ps1", ".\install.ps1")

      - name: Restore opam cache
        id: cache-opam
        uses: actions/cache/restore@v4
        with:
          path: |
            D:\opam\bin
            D:\opamroot
          key: ${{ runner.os }}-opam-${{ hashFiles('install.ps1') }}

      - name: Install opam
        if: steps.cache-opam.outputs.cache-hit != 'true'
        run: |
          Invoke-Expression "& ./install.ps1 -OpamBinDir 'D:\opam\bin'"

      - name: Add opam to PATH
        run: |
          D:\opam\bin\opam --version
          "D:\opam\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Init opam
        if: steps.cache-opam.outputs.cache-hit != 'true'
        run: opam init --yes --no-setup

      - name: Restrict testing to available compilers
        if: steps.cache-opam.outputs.cache-hit != 'true'
        # TODO Amend this lowerbound as older compiler packages are updated
        run: opam switch set-invariant --formula "`"ocaml`" {>= `"4.13`"}"

      - name: Save opam cache
        if: steps.cache-opam.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            D:\opam\bin
            D:\opamroot
          key: ${{ steps.cache-opam.outputs.cache-primary-key }}

      - name: Install package
        run: |
          opam update
          opam install --color=always --confirm-level=unsafe-yes .
